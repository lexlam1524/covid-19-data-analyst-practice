<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.1fb9xk50mbr26z158l8gh06yaivw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.0vztf4n1ijjbwc1bl3w35093mkbc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LamTIng/Documents/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0vztf4n1ijjbwc1bl3w35093mkbc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_case' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0vztf4n1ijjbwc1bl3w35093mkbc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_case' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_case</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DE1D3D79BF1427BAC4CD9BE51278D87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DE1D3D79BF1427BAC4CD9BE51278D87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9DE1D3D79BF1427BAC4CD9BE51278D87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9DE1D3D79BF1427BAC4CD9BE51278D87]' role='measure' type='quantitative' />
      <column caption='Total Case' datatype='integer' name='[total_case]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9DE1D3D79BF1427BAC4CD9BE51278D87'>
            <properties context=''>
              <relation connection='excel-direct.0vztf4n1ijjbwc1bl3w35093mkbc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_case' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.1bsjbg90zpwgxm11v6u6s1vigbvq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.1ps6lf70bmd7gh15b3b420xk7mi0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LamTIng/Documents/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ps6lf70bmd7gh15b3b420xk7mi0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='infectionRate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ps6lf70bmd7gh15b3b420xk7mi0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='infectionRate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infectionRate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infectionRate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[infectionRate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7D32C8FB36D945A79AEFF41A4F4A0C61'>
            <properties context=''>
              <relation connection='excel-direct.1ps6lf70bmd7gh15b3b420xk7mi0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='infectionRate' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.0x6c7n31m9iwp9134kv7v054xfg7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.1w9a2um1c8249d17ytuek1ajmnfj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LamTIng/Documents/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1w9a2um1c8249d17ytuek1ajmnfj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='infectionRate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1w9a2um1c8249d17ytuek1ajmnfj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='infectionRate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infectionRate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infectionRate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D846673AA8FF41F2AE6F7C5284ACC744]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Infection Rate' datatype='real' name='[infectionRate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D846673AA8FF41F2AE6F7C5284ACC744'>
            <properties context=''>
              <relation connection='excel-direct.1w9a2um1c8249d17ytuek1ajmnfj' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='infectionRate' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.17kmijm1ch5f5w1bxkxmc0launtp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.1vuux6a1bs3my10zjtmky1ih9rkh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/LamTIng/Documents/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1vuux6a1bs3my10zjtmky1ih9rkh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1vuux6a1bs3my10zjtmky1ih9rkh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4133487F7DFD4524A4A4602DC1A189FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4133487F7DFD4524A4A4602DC1A189FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4133487F7DFD4524A4A4602DC1A189FE]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#916491'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#b0799f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#c792b5'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4133487F7DFD4524A4A4602DC1A189FE'>
            <properties context=''>
              <relation connection='excel-direct.1vuux6a1bs3my10zjtmky1ih9rkh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.1fb9xk50mbr26z158l8gh06yaivw' />
          </datasources>
          <datasource-dependencies datasource='federated.1fb9xk50mbr26z158l8gh06yaivw'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_case]' derivation='Sum' name='[sum:total_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Case' datatype='integer' name='[total_case]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:total_case:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:total_case:qk]&quot;</bucket>
              <bucket>&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]' value='147' />
            <format attr='height' value='63' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1fb9xk50mbr26z158l8gh06yaivw].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1fb9xk50mbr26z158l8gh06yaivw].[sum:DeathPercentage:qk]' value='n#,##0.00000;-#,##0.00000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]' value='36' />
            <format attr='background-color' scope='cols' value='#f3ebf3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1fb9xk50mbr26z158l8gh06yaivw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.2193922996520996' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E168385F-B3D9-40D0-A41A-759143E4AB03}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.17kmijm1ch5f5w1bxkxmc0launtp' />
          </datasources>
          <datasource-dependencies datasource='federated.17kmijm1ch5f5w1bxkxmc0launtp'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[sum:TotalDeathCount:qk]' value='56' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]' value='174' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0104972124099731' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17kmijm1ch5f5w1bxkxmc0launtp].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{004B7BCF-038B-4535-B651-C0FF0E67F3C6}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.1bsjbg90zpwgxm11v6u6s1vigbvq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bsjbg90zpwgxm11v6u6s1vigbvq'>
            <column caption='Infection Rate' datatype='real' name='[infectionRate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infectionRate]' derivation='Sum' name='[sum:infectionRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[Longitude (generated)]' field-type='quantitative' max='18943826.373187475' min='-15125659.878375011' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[Latitude (generated)]' field-type='quantitative' max='13038720.259519108' min='-10197913.549338792' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[sum:infectionRate:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[none:location:nk]' />
              <color column='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[sum:infectionRate:qk]' />
              <geometry column='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[Latitude (generated)]</rows>
        <cols>[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{77BC39DB-7AB2-45DC-B0A5-DB68E45A68E7}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.0x6c7n31m9iwp9134kv7v054xfg7' />
          </datasources>
          <datasource-dependencies datasource='federated.0x6c7n31m9iwp9134kv7v054xfg7'>
            <column-instance column='[infectionRate]' derivation='Avg' name='[avg:infectionRate:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infectionRate]' derivation='Avg' forecast-column-base='[avg:infectionRate:qk]' forecast-column-type='forecast-value' name='[fVal:avg:infectionRate:qk]' pivot='key' type='quantitative' />
            <column caption='Infection Rate' datatype='real' name='[infectionRate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;England&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;European Union&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Northern Ireland&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Scotland&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Timor&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Wales&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;World&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[tmn:date:qk]' field-type='quantitative' max='#2026-06-29 23:02:23.528#' min='#2020-03-02 09:14:20.184#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[fVal:avg:infectionRate:qk]' field-type='quantitative' max='76.72811664814644' min='-1.6063966003754757' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]' />
              <text column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]' />
              <color column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]' />
              <text column='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[fVal:avg:infectionRate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[fVal:avg:infectionRate:qk]</rows>
        <cols>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{86009CA0-4682-480A-BBEB-27295EB5E5A1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48899' id='16' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='48899' id='8' param='horz' type-v2='layout-flow' w='58800' x='800' y='1000'>
              <zone h='48899' id='6' type-v2='layout-basic' w='58800' x='800' y='1000'>
                <zone h='24450' id='3' name='Sheet 1' w='58800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24449' id='5' name='Sheet 3' w='58800' x='800' y='25450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='388' h='48899' id='14' is-fixed='true' name='Sheet 4' w='39600' x='59600' y='1000'>
              <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49101' id='12' name='Sheet 5' w='83900' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49101' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]&#10;[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]' type-v2='color' w='14500' x='84700' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='188' h='24450' id='3' is-fixed='true' name='Sheet 1' w='58800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48899' id='14' is-fixed='true' name='Sheet 4' w='39600' x='59600' y='1000'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='24449' id='5' is-fixed='true' name='Sheet 3' w='58800' x='800' y='25450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='12' is-fixed='true' name='Sheet 5' w='83900' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49101' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]&#10;[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]' type-v2='color' w='14500' x='84700' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B61F86C7-902A-4826-9456-559E89C9BC83}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fb9xk50mbr26z158l8gh06yaivw].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6864D212-22ED-4788-9B26-1B70F8901A1C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:TotalDeathCount:qk]</field>
            <field>[federated.17kmijm1ch5f5w1bxkxmc0launtp].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CC0BD34-CA0A-41EE-AA22-AEEB9435687F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='258'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[sum:infectionRate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bsjbg90zpwgxm11v6u6s1vigbvq].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE2C67DB-99B3-4D86-8E85-2E5E87744CFE}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='237'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]&#10;[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]</field>
            <field>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]</field>
            <field>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C67313A9-F994-4FCA-BF6C-014F486BD6AF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:Forecast Indicator:nk]</field>
              <field>[federated.0x6c7n31m9iwp9134kv7v054xfg7].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C6562560-6CDE-4FC6-8490-52EB81EAC62B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AyY+0rNC1NwWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='103' name='Sheet 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      7yh0/n8ANW8njkvsUwAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      f+DBAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
